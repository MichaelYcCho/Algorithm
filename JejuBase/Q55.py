# 하노이의 탑
# A = 시작기둥, B 보조기둥 C 목표기둥
# 하노이의 탑 공식은 (2**n) - 1   2의 n승 -1   O(2**n)

원반의이동경로 = []
def 하노이(원반의수, 시작기둥, 목표기둥, 보조기둥):
    #원판이 한개일 때
    if 원반의수 == 1:
        원반의이동경로.append([시작기둥, 목표기둥])  #[A -> C]
        return None
    # 1개가 아닐땐 원반의 n-1개를 보조기둥으로 옮긴다. 
    하노이(원반의수-1, 시작기둥, 보조기둥, 목표기둥)
    # 가장 큰 원반은 목표기둥으로 옮긴다
    원반의이동경로.append([시작기둥, 목표기둥])
    # 보조기둥과 시작기둥을 바꾼다.
    하노이(원반의수-1, 보조기둥, 목표기둥, 시작기둥) #여기서 시작기둥의 원반은 이미 보조기둥과 목표기둥으로 옮겨졌기 때문에 필요없음

하노이(3, 'A', 'B', 'C')
print(원반의이동경로)
print(len(원반의이동경로))